% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TDIDriver.R
\name{TDIDriver}
\alias{TDIDriver}
\title{TDIDriver (R6 class constructor)}
\description{
Generic and abstract R6 class for all TDI drivers (e.g., Yahoo, IEX, etc).
Inherit from this class to implement the API specific driver.
}
\details{
The abstract class `TDIDriver` is the generic class for API specific driver(s).
Each API has a driver sub-class of `TDIDriver` class to initiate the API.
}
\section{Super class}{
\code{\link[TDI:baseTDI]{TDI::baseTDI}} -> \code{TDIDriver}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TDIDriver$new()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize driver object and validate the sub-class implementation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TDIDriver$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An object of class `TDIDriver`.
}
}
}
