% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TDIConnection.R
\name{TDIConnection}
\alias{TDIConnection}
\title{TDIConnection (R6 class constructor)}
\description{
TDIConnection is a generic and abstract R6 class that wraps an object of class `TDIDriver` and connection parameters.
Its purpose is to establish a connection and to store all connection details.
Inherit from this class to implement API connections.
}
\details{
The `TDIConnection` class is the super class for each API to hold the connection.
Each API has a driver of class `TDIDriver` that can setup the API connection (of class `TDIConnection`).
}
\section{Super class}{
\code{\link[TDI:baseTDI]{TDI::baseTDI}} -> \code{TDIConnection}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{driver}}{An object of class `TDIDriver`.}

\item{\code{conn_args}}{List with connection parameters.}

\item{\code{endpoints}}{List with available API endpoints.}

\item{\code{values}}{List collection with valid parameter values.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TDIConnection$new()}}
\item \href{#method-validValue}{\code{TDIConnection$validValue()}}
\item \href{#method-requestString}{\code{TDIConnection$requestString()}}
\item \href{#method-jsonRequest}{\code{TDIConnection$jsonRequest()}}
\item \href{#method-getChart}{\code{TDIConnection$getChart()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Initialize the API connection for the sub-class.
This class is abstract and cannot be instantiated.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TDIConnection$new(driver, conn_args, endpoints, values)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{driver}}{An object of class `TDIDriver`.}

\item{\code{conn_args}}{List with connection parameters.}

\item{\code{endpoints}}{List with available API endpoints.}

\item{\code{values}}{List with allowed values for parameter(s).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of class `TDIConnection`.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validValue"></a>}}
\subsection{Method \code{validValue()}}{
Validate the parameter value against API allowed values.
Return the first value if the parameter value is invalid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TDIConnection$validValue(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameter value to validate.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Valid parameter value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-requestString"></a>}}
\subsection{Method \code{requestString()}}{
Construct request URL string for the API call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TDIConnection$requestString(endpoint, path, query = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{endpoint}}{Endpoint for the API request.}

\item{\code{path}}{List with path parameters.}

\item{\code{query}}{Request query parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
URL string for the API request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-jsonRequest"></a>}}
\subsection{Method \code{jsonRequest()}}{
Execute API Json request.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TDIConnection$jsonRequest(url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{URL for the request.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Response content in Json format.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getChart"></a>}}
\subsection{Method \code{getChart()}}{
Interface method to be implemented by sub-class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TDIConnection$getChart(
  symbol,
  range = NULL,
  from = NULL,
  to = NULL,
  interval = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbol}}{Symbol to identify the instrument.}

\item{\code{range}}{Optional period range.}

\item{\code{from}}{Optional start date of period.}

\item{\code{to}}{Optional end date of period.}

\item{\code{interval}}{}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list with the calling arguments.
}
}
}
